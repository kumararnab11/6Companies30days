class Solution {
private:
    static bool comp(vector<int>&a,vector<int>&b){
        if(a[0]==b[0])return a[1]>b[1];
        else return a[0]<b[0];
    }
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<int> mini(n,INT_MAX);
        mini[0]=nums[0];

        for(int i=1;i<n;i++){
            int psn=lower_bound(mini.begin(),mini.begin()+i,nums[i])-mini.begin();
            if(psn<n)mini[psn]=nums[i];
        }

        for(int i=n-1;i>=0;i--) if(mini[i]<INT_MAX) return i+1;

        return 1;
    }
public:
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        sort(envelopes.begin(),envelopes.end(),comp);
        vector<int> h;
        for(auto it:envelopes)h.push_back(it[1]);
        return lengthOfLIS(h);
    }
};
