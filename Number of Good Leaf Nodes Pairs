/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    vector<int> fn(TreeNode* root,int &cnt,int dist){
        if(!root)return {0};
        if(!root->left && !root->right) return {1};

        vector<int> l=fn(root->left,cnt,dist);
        vector<int> r=fn(root->right,cnt,dist);

        for(int i:l){
            for(int j:r){
                if(i>0&&j>0){
                    if(i+j<=dist)cnt++;
                }
            }
        }
        vector<int> ans;
        for(int i:l){
            if(i>0&&i<dist)ans.push_back(i+1);
        }
        for(int i:r){
            if(i>0&&i<dist)ans.push_back(i+1);
        }

        return ans;
    }
public:
    int countPairs(TreeNode* root, int distance) {
        int cnt=0;
        fn(root,cnt,distance);
        return cnt;
    }
};
