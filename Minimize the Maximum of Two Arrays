class Solution {
private:

    bool ifPossible(long long total,long long d1,long long d2,long long c1,long long c2){

        long long common=total/(lcm(d1,d2));

        if(d1==d2){
            if((total-common)>=(c1+c2)) return true;
            else return false;
        }

        else{
            long long m1=(total/d1)-common;
            long long m2=(total/d2)-common;
            c2-=m1;
            c1-=m2;
           if(c1<0)c1=0;
           if(c2<0)c2=0;

            if((total-m1-m2-common)>=(c1+c2)) return true;
            return false;
        }
    }
public:
    int minimizeSet(long long d1, long long d2, long long c1, long long c2) {
        long long l=c1+c2,r=10e9,mid;

        while(l<=r){
            mid=l+(r-l)/2;

            if(ifPossible(mid,d1,d2,c1,c2)) r=mid-1;
            else l=mid+1;
        }
        return l;
    }
};
